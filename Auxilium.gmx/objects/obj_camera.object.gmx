<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//enum for state
enum camState{
    LISTEN,
    FOLLOW,
    LISTENFOLLOW
}
//start ready to be told
camState = camState.LISTEN;

//forcing a singleton for protection
/*if (instance_number(obj_camera) &gt; 0){
    instance_destroy();
}*/
fromx = x;
fromy = y;
//the destination we're going to
finalx = x;
finaly = y;
//setting the defaults
initCamera();
//counter for easing x
lerpCounterx = 0.0;
//counter for easing y
lerpCountery = 0.0;

//this is where the good stuff is, edit these for different camera movement
lerpModifierx = 0.05;
lerpModifiery = 0.05;
//the rate of change in speed (easing)
lerpModifierModifierx = 0.000055;
lerpModifierModifiery = 0.000055;
//the slowest the camera can go
minimumCameraMovement = 0.00065;
//how fast it should start at
startingCameraSpeed = 0.01;
//gets the name of the current room and stores it to check if we've changed room later
previousRoom = room_get_name(room);

if (instance_number(obj_player) &gt; 0){
    obj_following = asset_get_index("obj_player");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//checks if the room it's in is different than the stored one
if (previousRoom != room_get_name(room)){
    initCamera();
    previousRoom = room_get_name(room);
}
switch (camState){
    //for moving to an object then staying there
    case camState.LISTEN: camListen(false); break;
    //for following an object 
    case camState.FOLLOW: camFollow(); break;
    //for moving to an object, then following it
    case camState.LISTENFOLLOW: camListen(true); break;
}

//self explanitory
updateCamera();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(  0,300, "X: "+ string(x));
draw_text(  0,310, "Y: "+ string(y));
draw_text(  0,320, "view_wport: "+ string(view_wport[0]));
draw_text(  0,330, "view_hport: "+ string(view_hport[0]));
draw_text(  0,340, "view_wview: "+ string(view_wview[0]));
draw_text(  0,350, "view_hview: "+ string(view_hview[0]));
draw_text(  0,360, "view_xport: "+ string(view_xport[0]));
draw_text(  0,370, "view_yport: "+ string(view_yport[0]));
clearDraw();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
